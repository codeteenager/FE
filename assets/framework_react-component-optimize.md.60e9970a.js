import{_ as s,o as a,c as n,V as e}from"./chunks/framework.35cad8a6.js";const d=JSON.parse('{"title":"React 组件性能优化","description":"","frontmatter":{},"headers":[],"relativePath":"framework/react-component-optimize.md","filePath":"framework/react-component-optimize.md","lastUpdated":1688918961000}'),l={name:"framework/react-component-optimize.md"},p=e(`<h1 id="react-组件性能优化" tabindex="-1">React 组件性能优化 <a class="header-anchor" href="#react-组件性能优化" aria-label="Permalink to &quot;React 组件性能优化&quot;">​</a></h1><h2 id="react组件性能优化最佳实践" tabindex="-1">React组件性能优化最佳实践 <a class="header-anchor" href="#react组件性能优化最佳实践" aria-label="Permalink to &quot;React组件性能优化最佳实践&quot;">​</a></h2><p>React组件性能优化的核心是减少渲染真实DOM节点的频率，减少 Virtual DOM比对的频率。</p><h2 id="组件卸载前进行清理操作" tabindex="-1">组件卸载前进行清理操作 <a class="header-anchor" href="#组件卸载前进行清理操作" aria-label="Permalink to &quot;组件卸载前进行清理操作&quot;">​</a></h2><p>在组件中为 window注册的全局事件，以及定时器，在组件卸载前要清理掉，防止组件卸载后继续执行影响应用性能。</p><p>需求：开启定时器，然后卸载组件，查看组件中的定时器是否还在运行。</p><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Test</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">useEffect</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">timer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">setInterval</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">定时器在执行</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">},</span><span style="color:#F78C6C;">1000</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;">=&gt;</span><span style="color:#82AAFF;">clearInterval</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">timer</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;">[])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,7),o=[p];function t(r,c,i,F,y,D){return a(),n("div",null,o)}const u=s(l,[["render",t]]);export{d as __pageData,u as default};
