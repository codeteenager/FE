import{_ as e,o as r,c as a,Q as t}from"./chunks/framework.d64f6e3c.js";const l="/FE/project/24.png",i="/FE/project/25.png",o="/FE/project/26.png",n="/FE/project/27.png",k=JSON.parse('{"title":"物料平台建设","description":"","frontmatter":{},"headers":[],"relativePath":"project/solution/material.md","filePath":"project/solution/material.md","lastUpdated":1690367792000}'),p={name:"project/solution/material.md"},s=t('<h1 id="物料平台建设" tabindex="-1">物料平台建设 <a class="header-anchor" href="#物料平台建设" aria-label="Permalink to &quot;物料平台建设&quot;">​</a></h1><h2 id="什么是物料" tabindex="-1">什么是物料？ <a class="header-anchor" href="#什么是物料" aria-label="Permalink to &quot;什么是物料？&quot;">​</a></h2><p>物料(Material) 这个概念在前端领域大家都不陌生，在阿里飞冰中的解释物料即组成一个前端项目的不同单位，根据抽象粒度的不同，我们将物料从小到大分为组件（component）、区块（block）和模板（scaffold）。其实在这里可以理解为前端可复用的组件模块都可理解成物料。</p><h2 id="为什么要有物料" tabindex="-1">为什么要有物料？ <a class="header-anchor" href="#为什么要有物料" aria-label="Permalink to &quot;为什么要有物料？&quot;">​</a></h2><p>在企业级前端开发中，我们经常会遇到一些问题，例如：</p><ul><li>项目中有很多重复的功能，你如何去优化？</li><li>我想做一个新功能，有没有谁做过类似的功能可以拿来用</li><li>大家写过的组件各具风格，不好交流</li></ul><p>针对这种情况我们不得不去搭建一个物料平台，建设前端物料体系，统一前端的开发流程和技术栈，保证资源复用率。</p><h2 id="物料平台建设-1" tabindex="-1">物料平台建设 <a class="header-anchor" href="#物料平台建设-1" aria-label="Permalink to &quot;物料平台建设&quot;">​</a></h2><p>物料平台主要分为两部分内容，物料开发脚手架和物料管理平台。整体流程图如下： <img src="'+l+'" alt=""></p><h3 id="脚手架" tabindex="-1">脚手架 <a class="header-anchor" href="#脚手架" aria-label="Permalink to &quot;脚手架&quot;">​</a></h3><p>在这里我们主要借鉴了阿里飞冰提供的物料开发工具iceworks-cli，由于阿里飞冰提供的主要是React生态工具，而我们偏向于Vue技术栈，所以将其进行修改定制化。提供的功能主要有：</p><ul><li>物料的创建</li><li>物料的开发</li><li>物料文档的生成</li><li>物料的截图</li><li>物料的上传发布</li><li>物料数据的生成与同步管理平台</li></ul><p>对于物料的创建，我们事先定义了物料的模板，主要是物料开发的一个标准规范。包括以下内容：</p><ul><li>物料命名规范</li><li>物料文档规范</li><li>物料代码规范</li><li>物料发布规范</li></ul><h3 id="物料管理平台" tabindex="-1">物料管理平台 <a class="header-anchor" href="#物料管理平台" aria-label="Permalink to &quot;物料管理平台&quot;">​</a></h3><p>物料管理我们使用npm仓库对前端物料进行管理，私有化npm仓库有很多例如Verdaccio、cnpm、nexus，在这里我们使用nexus进行npm包管理。但是nexus仓库只能够展示npm包，如下</p><p><img src="'+i+'" alt=""></p><p>我们不能直接把npm仓库暴露给用户，体验上也不够好，所以我们需要自定义物料管理平台去展示用户上传的物料，并提供检索功能，供用户快速查找他所需要的物料。</p><p><img src="'+o+'" alt=""></p><p>那么我们管理平台如何去获取私有库的数据呢，这时候我们需要一个媒介unpkg去帮平台拉取私有库的数据，unpkg 是一个前端常用的公共 CDN，你可以通过URL形式访问npm包中的资源，例如：<a href="https://unpkg.com/react@16.14.0/umd/react.production.min.js" target="_blank" rel="noreferrer">https://unpkg.com/react@16.14.0/umd/react.production.min.js</a>。具体可以看<a href="https://zhuanlan.zhihu.com/p/84119287" target="_blank" rel="noreferrer">使用unpkg来读取我们私有库的包</a>。整体流程如下：</p><p><img src="'+n+'" alt=""></p><h2 id="其他物料平台" tabindex="-1">其他物料平台 <a class="header-anchor" href="#其他物料平台" aria-label="Permalink to &quot;其他物料平台&quot;">​</a></h2><ul><li><a href="https://appworks.site/materials/about.html#%E6%A6%82%E5%BF%B5%E8%A7%A3%E9%87%8A" target="_blank" rel="noreferrer">ice</a></li><li><a href="https://package.yonyoucloud.com/home" target="_blank" rel="noreferrer">YouBuilder</a></li><li><a href="https://next.startdt.com/" target="_blank" rel="noreferrer">Next</a></li><li><a href="https://vusion.163yun.com/#/docs/introduction?teamId=039fc100105411ea8f8f9f5d7f78ba77" target="_blank" rel="noreferrer">Vusion</a></li><li><a href="https://ling.jd.com/jdw/" target="_blank" rel="noreferrer">羚珑</a></li><li><a href="https://docs.bit.dev/docs/quick-start" target="_blank" rel="noreferrer">Bit</a></li><li><a href="http://www.fuep.net/" target="_blank" rel="noreferrer">Fuep</a></li></ul><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://segmentfault.com/a/1190000020125448" target="_blank" rel="noreferrer">物料前端中台建设</a></li><li><a href="https://zhuanlan.zhihu.com/p/246712012" target="_blank" rel="noreferrer">从生产到消费，设计基于物料的前端开发链路</a></li><li><a href="https://juejin.cn/post/6844904033514160141" target="_blank" rel="noreferrer">实战：打造团队的共享组件平台！</a></li><li><a href="https://segmentfault.com/a/1190000041079239" target="_blank" rel="noreferrer">从业务组件库看前端物料生态</a></li><li><a href="https://www.bilibili.com/read/cv7598746?from=search&amp;spm_id_from=333.337.0.0" target="_blank" rel="noreferrer">阿里 CBU 体验技术部 – 结合组件设计监控策略</a></li><li><a href="https://www.infoq.cn/article/MgILbHevE0WOp87VRAuA" target="_blank" rel="noreferrer">京东零售平台：前端组件资源共享与中心化管理实践</a></li><li><a href="https://mp.weixin.qq.com/s/u5oAcIYiGrl1qOujOYjzqw" target="_blank" rel="noreferrer">基于 MF 的组件化共享工作流</a></li><li><a href="https://juejin.cn/post/7225891176531542077" target="_blank" rel="noreferrer">基于物料的前端技术架构与共建方案</a></li><li><a href="https://mp.weixin.qq.com/s/Q4K4nV3Y3k5zXHglgPU22w" target="_blank" rel="noreferrer">如何最大程度复用前端组件，提高开发效率？</a></li></ul>',25),c=[s];function h(u,m,f,d,_,b){return r(),a("div",null,c)}const q=e(p,[["render",h]]);export{k as __pageData,q as default};
