import{_ as e,c as r,o as t,a}from"./app.d938ae89.js";const i="/FE/project/38.png",f=JSON.parse('{"title":"灰度发布","description":"","frontmatter":{},"headers":[{"level":2,"title":"灰度发布方案","slug":"灰度发布方案","link":"#灰度发布方案","children":[]},{"level":2,"title":"相关文章","slug":"相关文章","link":"#相关文章","children":[]}],"relativePath":"project/deploy/grey-publish.md","lastUpdated":1670731205000}'),l={name:"project/deploy/grey-publish.md"},n=a('<h1 id="灰度发布" tabindex="-1">灰度发布 <a class="header-anchor" href="#灰度发布" aria-hidden="true">#</a></h1><p>灰度发布（又名金丝雀发布）是指在黑与白之间，能够平滑过渡的一种发布方式。</p><p>在其上可以进行A/B testing，即让一部分用户继续用产品特性A，一部分用户开始用产品特性B，如果用户对B没有什么反对意见，那么逐步扩大范围，把所有用户都迁移到B上面来。</p><p>灰度发布可以保证整体系统的稳定，在初始灰度的时候就可以发现、调整问题，以保证其影响度。</p><p>灰度期：灰度发布开始到结束期间的这一段时间，称为灰度期。</p><h2 id="灰度发布方案" tabindex="-1">灰度发布方案 <a class="header-anchor" href="#灰度发布方案" aria-hidden="true">#</a></h2><p>我们先把线上的稳定版本称为stable版，本次发布的新功能版本称为beta版。开发人员给stable和beta版本各自启动了nginx服务，在运维层启动了一层入口nginx服务，作为转发。</p><p>客户端通过域名访问项目，通过请求灰度规则，命中灰度规则后，并给客户端设置cookie作为标识，并将用户标识存放到redis，将用户重定向到指定的版本</p><p>灰度规则接口请求的时候，如果已经带有cookie则直接返回对应版本，不存在cookie则去查找redis，redis中存在对应信息则直接返回，如果不存在则走灰度规则识别流程</p><p>前端sdk功能：用于控制发起灰度规则请求的时机、回调操作和其他业务操作，sdk的使用场景：项目中需要在特定的时机触发灰度功能，点击某个按钮，或者进入某个页面，比如某些应用是会弹出弹窗，告诉用户有内测版本，是否需要体验，点击同意后才跳转到灰度版本。</p><p><img src="'+i+'" alt=""></p><h2 id="相关文章" tabindex="-1">相关文章 <a class="header-anchor" href="#相关文章" aria-hidden="true">#</a></h2><ul><li><a href="https://www.cnblogs.com/lvdabao/p/11920919.html" target="_blank" rel="noreferrer">一种前端灰度发布方案</a></li><li><a href="https://mp.weixin.qq.com/s/xdl_m1dJ9HcabASF-bwnoA" target="_blank" rel="noreferrer">灰度发布探索与实践</a></li><li><a href="https://mp.weixin.qq.com/s/HGx9crVk_mGGR--mhnJEXQ" target="_blank" rel="noreferrer">Vue灰度发布新功能的那些事</a></li><li><a href="https://cloud.tencent.com/developer/article/1887735" target="_blank" rel="noreferrer">前端灰度发布落地方案</a></li></ul>',13),o=[n];function s(p,c,d,h,_,m){return t(),r("div",null,o)}const u=e(l,[["render",s]]);export{f as __pageData,u as default};
